{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAE/C,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAc,EAAO,SAAS,CAAC,MAAM,CAAC,OACtC,EACJ,AAAgB,IAAhB,GAAqB,AAAgB,IAAhB,EAAoB,SAAW,SAEhD,EAAa,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAApC,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAChD,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAEtD,GAAI,AAAa,WAAb,EAMF,OAAO,EACH,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,GAPxB,IAAM,EAAS,SAAS,EAAM,OAAO,CAAC,MAAO,IAAI,OAAO,CAAC,KAAM,IAAK,IAC9D,EAAS,SAAS,EAAM,OAAO,CAAC,MAAO,IAAI,OAAO,CAAC,KAAM,IAAK,IAEpE,OAAO,EAAc,EAAS,EAAS,EAAS,CAMpD,GAEM,EAAQ,EAAM,aAAa,CAAC,QAElC,CAAA,EAAM,SAAS,CAAG,GAElB,EAAW,OAAO,CAAC,SAAC,CAApB,EACE,EAAM,WAAW,CAAC,EACpB,EACF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar rows = Array.from(table.querySelectorAll(\"tbody tr\"));\nheaders.forEach(function(header, columnIndex) {\n    header.addEventListener(\"click\", function() {\n        var isAscending = header.classList.toggle(\"asc\");\n        var dataType = columnIndex === 2 || columnIndex === 3 ? \"number\" : \"string\";\n        var sortedRows = rows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[columnIndex].textContent.trim();\n            var cellB = rowB.cells[columnIndex].textContent.trim();\n            if (dataType === \"number\") {\n                var valueA = parseInt(cellA.replace(/\\$/g, \"\").replace(/,/g, \"\"), 10);\n                var valueB = parseInt(cellB.replace(/\\$/g, \"\").replace(/,/g, \"\"), 10);\n                return isAscending ? valueA - valueB : valueB - valueA;\n            } else return isAscending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);\n        });\n        var tbody = table.querySelector(\"tbody\");\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.11f28005.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst rows = Array.from(table.querySelectorAll('tbody tr'));\n\nheaders.forEach((header, columnIndex) => {\n  header.addEventListener('click', () => {\n    const isAscending = header.classList.toggle('asc');\n    const dataType =\n      columnIndex === 2 || columnIndex === 3 ? 'number' : 'string';\n\n    const sortedRows = rows.sort((rowA, rowB) => {\n      const cellA = rowA.cells[columnIndex].textContent.trim();\n      const cellB = rowB.cells[columnIndex].textContent.trim();\n\n      if (dataType === 'number') {\n        const valueA = parseInt(cellA.replace(/\\$/g, '').replace(/,/g, ''), 10);\n        const valueB = parseInt(cellB.replace(/\\$/g, '').replace(/,/g, ''), 10);\n\n        return isAscending ? valueA - valueB : valueB - valueA;\n      } else {\n        return isAscending\n          ? cellA.localeCompare(cellB)\n          : cellB.localeCompare(cellA);\n      }\n    });\n\n    const tbody = table.querySelector('tbody');\n\n    tbody.innerHTML = '';\n\n    sortedRows.forEach((row) => {\n      tbody.appendChild(row);\n    });\n  });\n});\n"],"names":["table","document","querySelector","headers","querySelectorAll","rows","Array","from","forEach","header","columnIndex","addEventListener","isAscending","classList","toggle","dataType","sortedRows","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","localeCompare","valueA","parseInt","replace","valueB","tbody","innerHTML","row","appendChild"],"version":3,"file":"index.11f28005.js.map"}